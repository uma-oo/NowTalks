PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS users (
    userID INTEGER PRIMARY KEY AUTOINCREMENT,
    nickname VARCHAR(30) NOT NULL UNIQUE,
    age INTEGER NOT NULL,
    gender TEXT NOT NULL DEFAULT 'male' CHECK (gender IN ('male','female')),
    firstName VARCHAR(30) NOT NULL,
    lastName VARCHAR(50) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(50) NOT NULL, 
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS sessions (
    sessionID INTEGER PRIMARY KEY,
    userID  INTEGER NOT NULL UNIQUE,
    sessionToken VARCHAR(200) NOT NULL UNIQUE,
    expiresAt DATETIME,
    FOREIGN KEY (userID) REFERENCES users(userID) ON DELETE CASCADE
); 

CREATE TABLE IF NOT EXISTS posts (
    postID INTEGER PRIMARY KEY AUTOINCREMENT,
    userID INTEGER NOT NULL, 
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    FOREIGN KEY (userID) REFERENCES users(userID) ON DELETE CASCADE 
);

CREATE TABLE IF NOT EXISTS comments (
    commentID INTEGER PRIMARY KEY,
    postID INTEGER NOT NULL,
    userID INTEGER NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    content TEXT NOT NULL ,
    FOREIGN KEY (postID) REFERENCES posts(postID) ON DELETE CASCADE,
    FOREIGN KEY (userID) REFERENCES users(userID) ON DELETE CASCADE
);





CREATE TABLE IF NOT EXISTS types (
  entityTypeID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  entityType  TEXT NOT NULL UNIQUE
);



INSERT INTO types (entityType) VALUES 
  ('post'),
  ('comment');


CREATE TABLE IF NOT EXISTS reactions(
  reactionID INTEGER NOT NULL PRIMARY KEY, 
  entityTypeID INTEGER NOT NULL,
  entityID INTEGER NOT NULL,
  reaction INTEGER NOT NULL DEFAULT 0 CHECK (reaction IN (-1,0,1)), 
  userID INTEGER NOT NULL,
  FOREIGN KEY (userID) REFERENCES users(userID) ON DELETE CASCADE,
  FOREIGN KEY (entityTypeID) REFERENCES types(entityTypeID),
  UNIQUE(userID, entityTypeID, entityID)
);



CREATE TABLE IF NOT EXISTS messages (
  messageID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 
  senderID INTEGER NOT NULL,
  receiverID INTEGER NOT NULL,
  message TEXT NOT NULL,
  readStatus BOOLEAN NOT NULL DEFAULT 0 CHECK (readStatus IN (0, 1)),
  createdAt DATETIME  NOT NULL,
  FOREIGN KEY (senderID) REFERENCES users (userID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (receiverID) REFERENCES users (userID) ON UPDATE CASCADE ON DELETE CASCADE,
  CHECK (senderID != receiverID)
);



CREATE  TABLE IF NOT EXISTS notifications(
  notificationID INTEGER PRIMARY KEY AUTOINCREMENT,
  readStatus   BOOLEAN NOT NULL DEFAULT 0 CHECK (readStatus IN (0, 1)), 
  receiverNotificationID INTEGER NOT NULL,
  messageID  INTEGER NOT NULL,
  FOREIGN KEY (messageID) REFERENCES messages(messageID) ON DELETE CASCADE,
  FOREIGN key (receiverNotificationID)  REFERENCES users(userID) ON DELETE CASCADE
);
